<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


	<!-- web specific linking, hooks into EriLink tag cluster <bean id="linkBuilderFactory" 
		class="com.ericsson.eipa.site.taglib.link.web.WebLinkBuilderFactory"/> <bean 
		id="canonicalUriCalculator" class="com.ericsson.eipa.site.action.localization.CanonicalURICalculator"/> -->
	<!-- Scan class path to check for the spring base annotations -->


	 <context:component-scan base-package="com.utkal.supply.controller.*,com.utkal.supply.interceptors.*"
		use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
		<context:include-filter expression="org.springframework.stereotype.Component"
			type="annotation" />
	</context:component-scan>
	
	 <context:component-scan base-package="com.utkal.supply.*" />
	<context:annotation-config />


	<context:annotation-config />

<!--  transaction Management code goes here -->
<!-- Enable Annotation based Declarative Transaction Management -->
	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<!-- Creating TransactionManager Bean, since JDBC we are creating of type 
		DataSourceTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
<!--  transaction Management code ends here -->	


  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/utkalTest"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		<property name="validationQuery" value="SELECT 1"></property>
		<property name="testOnBorrow" value="true"></property>
	</bean>  
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" scope="prototype">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://mysql26164-utkalaqua.cloud.cms500.com/utkal"></property>
		<property name="username" value="root"></property>
		<property name="password" value="SSEqbr73441"></property>
	</bean>  -->


<!-- BEGIN : Customer Controller Service Beans -->
<bean id="customerController" class="com.utkal.supply.controller.CustomerController">
<property name="customerService" ref="customerService"></property>
<property name="defaulterService" ref="defaulterService"></property>
</bean>
<bean id="customerService" class="com.utkal.supply.customer.service.CustomerServiceImpl">
<property name="customerDao" ref="customerDao"></property>
</bean>
<bean id="customerDao" class="com.utkal.supply.dao.CustomerDaoImpl">
<property name="dataSource" ref="dataSource"></property>
</bean> 
	
<!-- END : Customer Controller Service Beans -->



<!-- BEGIN : Order Controller Service Dao Beans -->
<bean id="orderController" class="com.utkal.supply.controller.OrderController">
<property name="orderService" ref="orderService"></property>
</bean>
<bean id="orderService" class="com.utkal.supply.customer.service.OrderServiceImpl">
<property name="orderDao" ref="orderDao"></property>
<property name="defaulterService" ref="defaulterService"></property>
</bean>
<bean id="orderDao" class="com.utkal.supply.dao.OrderDaoImpl">
<property name="dataSource" ref="dataSource"></property>
</bean>







<!--BEGIN : Defaulter Service beans -->
<bean id="defaultersController" class="com.utkal.supply.controller.DefaultersController">
<property name="defaulterService" ref="defaulterService"></property>
</bean>
<bean id="defaulterService" class="com.utkal.supply.customer.service.DefaultersServiceImpl">
<property name="defaulterDao" ref="defaulterDao"></property>
</bean>
<bean id="defaulterDao" class="com.utkal.supply.dao.DefaultersDaoImpl">
<property name="dataSource" ref="dataSource"></property>
<!--END : Defaulter Service Bean   -->
</bean>

<!-- <bean id="testController" class="com.utkal.supply.controller.TestController" >
<property name="testService" ref="testService"></property>
</bean>
<bean id="testService" class="com.utkal.supply.customer.service.TestService">
<property name="testDao" ref="testDao"></property>
</bean>
 --><!--<aop:aspectj-autoproxy proxy-target-class="true" />
	<bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator"></bean>

	<bean id="authController" class="com.manoj.auth.controller.AuthController"></bean> 
		<bean id="authService" class="com.manoj.auth.service.AuthServiceImpl"></bean>

	<bean id="testannotation" class="com.manoj.app.aops.AopTester" ></bean>


	<bean id="controller" class="com.manoj.userService.controller.UserServiceController">
		<property name="userManagementService" ref="userManagementService"></property>

	</bean>
	<bean id="userManagementService"
		class="com.manoj.service.usermanagement.UserManagementServiceImpl">

		<property name="userManagementDao" ref="userManagementDao"></property>

	</bean>


	


	<bean id="mysessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mappingResources">
			<list>
				<value>user.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>

			</props>
		</property>
	</bean>

	<bean id="template" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="mysessionFactory"></property>
	</bean>


	<bean id="userManagementDao" class="com.manoj.dao.usermanagement.UserManagementDaoImpl">
		<property name="template" ref="template"></property>
	</bean>



 -->
</beans>

